{"version":3,"sources":["../../src/services/AcronymService.ts"],"sourcesContent":["import { CreateAcronymDto } from '@dtos/acronyms.dto';\nimport { HttpException } from '@exceptions/HttpException';\nimport { Acronym } from '@interfaces/acronyms.interface';\nimport acronymModel from '@/models/acronymModel';\nimport { isEmpty } from '@utils/util';\nimport fs from 'fs';\n\nclass AcronymService {\n  public acronyms = acronymModel;\n\n  public async getAcronyms(params: any): Promise<Acronym[]> {\n    const { from = 0, limit = 10, search = '' } = params;\n    const acronyms: Acronym[] = this.acronyms\n      .filter(acronym => acronym.acronym.indexOf(search) !== -1 || acronym.definition.indexOf(search) !== -1)\n      .slice(from, parseInt(from) + parseInt(limit));\n    return acronyms;\n  }\n  public async addAcronym(acronymData: CreateAcronymDto): Promise<Acronym> {\n    if (isEmpty(acronymData)) throw new HttpException(400, 'acronymData is empty');\n    const findAcronym: Acronym = this.acronyms.find(acronym => acronym.acronym === acronymData.acronym);\n    if (findAcronym) throw new HttpException(409, `This acronym ${acronymData.acronym} already exists`);\n    const addData: Acronym = { ...acronymData };\n    this.acronyms = [...this.acronyms, addData];\n    const acronymsData = [];\n    this.acronyms.forEach((item: any) => {\n      const newItem = {};\n      newItem[item.acronym] = item.definition;\n      acronymsData.push(newItem);\n    });\n    fs.writeFileSync('src/db/acronym.json', JSON.stringify(acronymsData));\n    return addData;\n  }\n\n  public async updateAcronym(acronymId: string, acronymData: CreateAcronymDto): Promise<Acronym> {\n    if (isEmpty(acronymData)) throw new HttpException(400, 'acronymData is empty');\n    console.log('id is ', acronymId.toString());\n    const findAcronym: Acronym = this.acronyms.find(acronym => acronym.acronym === acronymId);\n    if (!findAcronym) {\n      throw new HttpException(409, `This acronym ${acronymData.acronym} does not exist`);\n    }\n    const updateData: Acronym = { ...acronymData };\n    const acronymsData = this.acronyms.map((acronym: Acronym) => {\n      if (acronym.acronym === acronymId) acronym = { ...acronym, definition: acronymData.definition };\n      const newItem = {};\n      newItem[acronym.acronym] = acronym.definition;\n      return newItem;\n    });\n    fs.writeFileSync('src/db/acronym.json', JSON.stringify(acronymsData));\n    return updateData;\n  }\n\n  public async deleteAcronym(acronymId: string): Promise<Acronym[]> {\n    if (isEmpty(acronymId)) throw new HttpException(400, 'acronymId is empty');\n    const findAcronym: Acronym = this.acronyms.find(acronym => acronym.acronym === acronymId);\n    if (!findAcronym) {\n      throw new HttpException(409, `This acronym ${acronymId} does not exist`);\n    }\n\n    const acronymsData = this.acronyms.filter(acronym => acronym.acronym !== acronymId);\n    const acronymsNewData = acronymsData.map((acronym: Acronym) => {\n      const newItem = {};\n      newItem[acronym.acronym] = acronym.definition;\n      return newItem;\n    });\n\n    fs.writeFileSync('src/db/acronym.json', JSON.stringify(acronymsNewData));\n    return acronymsData;\n  }\n}\n\nexport default AcronymService;\n"],"names":["AcronymService","getAcronyms","params","from","limit","search","acronyms","filter","acronym","indexOf","definition","slice","parseInt","addAcronym","acronymData","isEmpty","HttpException","findAcronym","find","addData","acronymsData","forEach","item","newItem","push","fs","writeFileSync","JSON","stringify","updateAcronym","acronymId","console","log","toString","updateData","map","deleteAcronym","acronymsNewData","acronymModel"],"mappings":"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"}