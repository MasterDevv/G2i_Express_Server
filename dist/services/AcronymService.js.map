{"version":3,"sources":["../../src/services/AcronymService.ts"],"sourcesContent":["import { CreateAcronymDto } from '@dtos/acronyms.dto';\nimport { HttpException } from '@exceptions/HttpException';\nimport { Acronym } from '@interfaces/acronyms.interface';\nimport acronymModel from '@/models/acronymModel';\nimport { isEmpty } from '@utils/util';\nimport fs from 'fs';\n\nclass AcronymService {\n  public acronyms = acronymModel;\n\n  public async getAcronyms(): Promise<Acronym[]> {\n    const acronyms: Acronym[] = this.acronyms;\n    return acronyms;\n  }\n  public async addAcronym(acronymData: CreateAcronymDto): Promise<Acronym> {\n    if (isEmpty(acronymData)) throw new HttpException(400, 'acronymData is empty');\n    const findAcronym: Acronym = this.acronyms.find(acronym => acronym.acronym === acronymData.acronym);\n    if (findAcronym) throw new HttpException(409, `This acronym ${acronymData.acronym} already exists`);\n    const addData: Acronym = { ...acronymData };\n    this.acronyms = [...this.acronyms, addData];\n    const acronymsData = [];\n    this.acronyms.forEach((item: any) => {\n      const newItem = {};\n      newItem[item.acronym] = item.definition;\n      acronymsData.push(newItem);\n    });\n    fs.writeFileSync('src/db/acronym.json', JSON.stringify(acronymsData));\n    return addData;\n  }\n\n  public async updateAcronym(acronymId: string, acronymData: CreateAcronymDto): Promise<Acronym> {\n    if (isEmpty(acronymData)) throw new HttpException(400, 'acronymData is empty');\n    console.log('id is ', acronymId.toString());\n    const findAcronym: Acronym = this.acronyms.find(acronym => acronym.acronym === acronymId);\n    if (!findAcronym) {\n      throw new HttpException(409, `This acronym ${acronymData.acronym} does not exist`);\n    }\n    const updateData: Acronym = { ...acronymData };\n    const acronymsData = this.acronyms.map((acronym: Acronym) => {\n      if (acronym.acronym === acronymId) acronym = { ...acronym, definition: acronymData.definition };\n      const newItem = {};\n      newItem[acronym.acronym] = acronym.definition;\n      return newItem;\n    });\n    fs.writeFileSync('src/db/acronym.json', JSON.stringify(acronymsData));\n    return updateData;\n  }\n\n  public async deleteAcronym(acronymId: string): Promise<Acronym[]> {\n    if (isEmpty(acronymId)) throw new HttpException(400, 'acronymId is empty');\n    const findAcronym: Acronym = this.acronyms.find(acronym => acronym.acronym === acronymId);\n    if (!findAcronym) {\n      throw new HttpException(409, `This acronym ${acronymId} does not exist`);\n    }\n\n    const acronymsData = this.acronyms.filter(acronym => acronym.acronym !== acronymId);\n    const acronymsNewData = acronymsData.map((acronym: Acronym) => {\n      const newItem = {};\n      newItem[acronym.acronym] = acronym.definition;\n      return newItem;\n    });\n\n    fs.writeFileSync('src/db/acronym.json', JSON.stringify(acronymsNewData));\n    return acronymsData;\n  }\n}\n\nexport default AcronymService;\n"],"names":["AcronymService","getAcronyms","acronyms","addAcronym","acronymData","isEmpty","HttpException","findAcronym","find","acronym","addData","acronymsData","forEach","item","newItem","definition","push","fs","writeFileSync","JSON","stringify","updateAcronym","acronymId","console","log","toString","updateData","map","deleteAcronym","filter","acronymsNewData","acronymModel"],"mappings":"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"}