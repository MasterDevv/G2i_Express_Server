{"version":3,"sources":["../../src/tests/users.test.ts"],"sourcesContent":["import request from 'supertest';\nimport App from '@/app';\nimport { CreateUserDto } from '@dtos/users.dto';\nimport { User } from '@interfaces/users.interface';\nimport userModel from '@models/users.model';\nimport UserRoute from '@routes/users.route';\n\nafterAll(async () => {\n  await new Promise<void>(resolve => setTimeout(() => resolve(), 500));\n});\n\ndescribe('Testing Users', () => {\n  describe('[GET] /users', () => {\n    it('response statusCode 200 / findAll', () => {\n      const findUser: User[] = userModel;\n      const usersRoute = new UserRoute();\n      const app = new App([usersRoute]);\n\n      return request(app.getServer()).get(`${usersRoute.path}`).expect(200, { data: findUser, message: 'findAll' });\n    });\n  });\n\n  describe('[GET] /users/:id', () => {\n    it('response statusCode 200 / findOne', () => {\n      const userId = 1;\n      const findUser: User = userModel.find(user => user.id === userId);\n      const usersRoute = new UserRoute();\n      const app = new App([usersRoute]);\n\n      return request(app.getServer()).get(`${usersRoute.path}/${userId}`).expect(200, { data: findUser, message: 'findOne' });\n    });\n  });\n\n  describe('[POST] /users', () => {\n    it('response statusCode 201 / created', async () => {\n      const userData: CreateUserDto = {\n        email: 'example@email.com',\n        password: 'password',\n      };\n      const usersRoute = new UserRoute();\n      const app = new App([usersRoute]);\n\n      return request(app.getServer()).post(`${usersRoute.path}`).send(userData).expect(201);\n    });\n  });\n\n  describe('[PUT] /users/:id', () => {\n    it('response statusCode 200 / updated', async () => {\n      const userId = 1;\n      const userData: CreateUserDto = {\n        email: 'example@email.com',\n        password: 'password',\n      };\n      const usersRoute = new UserRoute();\n      const app = new App([usersRoute]);\n\n      return request(app.getServer()).put(`${usersRoute.path}/${userId}`).send(userData).expect(200);\n    });\n  });\n\n  describe('[DELETE] /users/:id', () => {\n    it('response statusCode 200 / deleted', () => {\n      const userId = 1;\n      const deleteUser: User[] = userModel.filter(user => user.id !== userId);\n      const usersRoute = new UserRoute();\n      const app = new App([usersRoute]);\n\n      return request(app.getServer()).delete(`${usersRoute.path}/${userId}`).expect(200, { data: deleteUser, message: 'deleted' });\n    });\n  });\n});\n"],"names":["afterAll","Promise","resolve","setTimeout","describe","it","findUser","userModel","usersRoute","UserRoute","app","App","request","getServer","get","path","expect","data","message","userId","find","user","id","userData","email","password","post","send","put","deleteUser","filter","delete"],"mappings":"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"}